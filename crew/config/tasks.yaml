draft_creation_task:
  description: >
    Marcus, conduct intelligent research for "{topic}" using a dynamic, AI-driven approach.
    
    **STEP 1: INTELLIGENT QUERY PLANNING**
    Before making any RAG queries, analyze the topic "{topic}" and determine:
    - What category does this topic fall into? (Technology, Business, Health, Education, etc.)
    - What would be the most valuable angles for a {read_time}-minute read?
    - What would the target dev.to audience want to know about this topic?
    - What are likely knowledge gaps or misconceptions?
    
    **STEP 2: PROGRESSIVE RAG RESEARCH** 
    Based on your analysis, conduct 8-12 strategic RAG queries following this adaptive pattern:
    
    *Foundation Queries (3-4 queries):*
    - Start with: "What is {topic} overview definition"
    - Then: "Current state of {topic} 2024 2025 latest"
    - Then: "Key benefits advantages of {topic}"
    - Then: "Main challenges problems with {topic}"
    
    *Adaptive Deep-Dive (4-6 queries):*
    Generate specific queries based on what you learned in foundation phase.
    
    Examples for different topic types:
    - If tech product: "Technical specs", "User reviews", "Comparisons", "Pricing"
    - If business concept: "Implementation strategies", "ROI studies", "Case studies", "Best practices"
    - If educational topic: "Learning methods", "Expert opinions", "Common mistakes", "Resources"
    
    *Validation & Context (2-3 queries):*
    - "Expert opinions research studies on {topic}"
    - "Real world examples success stories {topic}"
    - "Future trends predictions {topic}"
    
    **STEP 3: INTELLIGENT SYNTHESIS**
    After each query, briefly note what you learned and how it shapes your next query.
    Adapt your research strategy based on the quality and type of information you're finding.
    
    Remember: The goal is not just to gather information, but to discover the story, angles, and insights that will make your content uniquely valuable.



  expected_output: >
    Content blueprint (500-600 words) with:
    
    **Content Strategy:**
    - Main narrative angle for {topic}
    - Value proposition for readers
    - Content approach (technical/accessible balance)
    
    **Detailed Outline:**
    1. Engaging opening hook and introduction
    2. 5-7 main sections with:
       - Compelling section titles
       - Key points to cover (2-3 per section)
       - Supporting evidence from RAG research
       - Estimated word distribution to reach ~{word_count} words
    3. Strong conclusion with engagement elements
    
    **Content Elements:**
    - Key statistics and insights to highlight
    - Expert quotes or opinions to include
    - Real-world examples or case studies
    - Practical takeaways for readers
    - Structure for ~{read_time} minute read time

final_writing_task:
  description: >
    Elena, write a complete, SEO-optimized blog post about "{topic}" using the provided draft as your primary guide.

    **PRIMARY APPROACH:**
    - Use the draft creation task output as your main content source
    - Enhance and expand the draft into a polished, SEO-friendly blog post
    - Only use RAG Tool for specific fact-checking or additional details

    **COVER IMAGE REQUIREMENTS:**
    - Use the Dev.to Cover Image Finder tool to find a suitable cover image
    - Search for images related to "{topic}"
    - If no suitable topic-specific image found, tool will automatically fallback to tech images
    - Include the cover image URL in the frontmatter ONLY
    - DO NOT embed the cover image again in the article body
    - DO NOT include image attribution in the article content


    **SEO OPTIMIZATION REQUIREMENTS:**
    
    *Title & Meta Optimization:*
    - Create an SEO-optimized title (50-60 characters) that includes primary keyword
    - Write a compelling meta description (150-160 characters) with target keywords
    - Use power words like "Complete Guide", "Ultimate", "Essential", "Best Practices"
    
    *Keyword Strategy:*
    - Identify and naturally integrate primary keyword throughout the content
    - Use 2-3 secondary keywords/related terms
    - Include keywords in: title, first paragraph, headings, and naturally throughout
    - Aim for 1-2% keyword density (don't overstuff)
    
    **CONTENT STRUCTURE REQUIREMENTS:**
    - Do NOT include an H1 heading in the markdown content body
    - The title exists only in the frontmatter
    - Start content directly with an engaging opening paragraph
    - Use H2 (##) for main sections, H3 (###) for subsections
    - Include target keywords in at least 2-3 H2 headings

    *Technical SEO Elements:*
    - Include relevant dev.to tags (4-5 tags maximum)
    - Use internal linking opportunities where natural
    - Add alt text concepts for any referenced images
    - Ensure mobile-friendly formatting
    
    *Content Quality Signals:*
    - Start with a hook that addresses reader's pain point or question
    - Include actionable insights and practical examples
    - Use data, statistics, or concrete examples when possible
    - Address common questions or objections in the content
    - Write for both beginners and experienced developers where applicable

    **ENDING REQUIREMENT:**
    - Instead of a 'reference links' or 'internal linking' section, finish with a short, impactful conclusion
    - The conclusion should summarize key takeaways and include a clear call-to-action
    - End with an engaging question or challenge for readers

  expected_output: >
    ONLY publish-ready markdown content for a dev.to blog post with comprehensive SEO optimization.
    Must include:
    - SEO-optimized title (50-60 characters) with primary keyword
    - SEO-friendly meta description (150-160 characters) with target keywords  
    - 4-5 relevant tags for dev.to
    - **cover_image:** URL from Pexels search (frontmatter only)
    - Clear heading structure (H2 for main sections, H3 for subsections) - NO H1 heading in content
    - Short, scannable paragraphs with bullet points and lists
    - Natural keyword integration throughout content
    - Actionable insights and practical examples
    - End with an engaging, concise conclusion with call-to-action (not reference links)
    
    IMPORTANT: Do NOT include an H1 heading (# Title) in the markdown content body. The title should ONLY appear in the frontmatter. Start the content directly with an engaging opening paragraph, then use H2 (##) for main sections.

      

publishing_task:
  description: >
    Use the Dev.to Publisher tool to publish the completed blog post on Dev.to.

    - Take the blog markdown file from the Senior Writer as input.
    - Use the Dev.to Publisher tool to extract title, tags, and cover image from the frontmatter and submit the post.
    - Set publishing status to 'published' by default.
    - If publishing fails, include clear error reporting in the output.

  expected_output: >
    JSON result of the publishing attempt, including the Dev.to URL if published successfully. Must include:
    - The article URL on Dev.to
    - Article ID on Dev.to
    - Published status
    - Any error details if publishing failed


social_media_post_task:
  description: >
    Jamie, create a professional LinkedIn post to promote the newly published blog article about "{topic}".
    
    **Requirements:**
    - Extract the published blog URL from the Dev.to publishing results
    - Use insights, hooks, and key points from the draft creation task for maximum relevance
    - Create engaging LinkedIn post content (200-250 characters optimal)
    - Include 2-4 relevant hashtags for maximum reach
    - Add a compelling hook that encourages readers to click the link
    - Use professional tone suitable for LinkedIn audience
    - Include emojis sparingly for visual appeal
    - End with a call-to-action question to drive engagement
    
    **LinkedIn Post Structure:**
    1. Post content with attention-grabbing opening and value proposition
    2. Leave one blank line
    3. Published blog URL (plain text, no markdown formatting)
    4. Leave one blank line  
    5. Hashtags (2-4 maximum)
    
    **Formatting Requirements:**
    - Use PLAIN TEXT only, NO markdown formatting
    - NO backticks, NO brackets, NO markdown syntax
    - Use proper line spacing between sections
    - Format should be ready for direct copy-paste to LinkedIn

  expected_output: >
    Output only the LinkedIn post content in PLAIN TEXT format.
    Do NOT use markdown formatting, backticks, or any special syntax.
    Do NOT include any explanation, metadata, or field wrappers.
    Use this exact structure:
    
    [Post content with hook and value proposition]
    
    [Plain text URL]
    
    [Hashtags]
    
    The output should be ready for direct copy-pasting to LinkedIn with proper spacing.
